// <auto-generated />
using System;
using MainDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MainDatabase.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220630211405_InitfixDB")]
    partial class InitfixDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MainDatabase.dbo.Tables.Article", b =>
                {
                    b.Property<int>("IdArticle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticle"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSource")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlToImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("publishedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdArticle");

                    b.HasIndex("IdSource");

                    b.ToTable("Article", (string)null);
                });

            modelBuilder.Entity("MainDatabase.dbo.Tables.Source", b =>
                {
                    b.Property<int>("IdSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSource"), 1L, 1);

                    b.Property<string>("IdSourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceIdSource")
                        .HasColumnType("int");

                    b.HasKey("IdSource");

                    b.HasIndex("SourceIdSource");

                    b.ToTable("Source", (string)null);
                });

            modelBuilder.Entity("MainDatabase.dbo.Tables.Article", b =>
                {
                    b.HasOne("MainDatabase.dbo.Tables.Source", "Source")
                        .WithMany()
                        .HasForeignKey("IdSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("MainDatabase.dbo.Tables.Source", b =>
                {
                    b.HasOne("MainDatabase.dbo.Tables.Source", null)
                        .WithMany("Sources")
                        .HasForeignKey("SourceIdSource");
                });

            modelBuilder.Entity("MainDatabase.dbo.Tables.Source", b =>
                {
                    b.Navigation("Sources");
                });
#pragma warning restore 612, 618
        }
    }
}
